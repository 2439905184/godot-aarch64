name: üêß Linux Builds
on:
  push:
    branches: [ master]
  pull_request:
    branches: [ master ]

# Global Cache Settings
env:
  GODOT_BASE_BRANCH: 3.3
  SCONS_CACHE_LIMIT: 4096

jobs:
  linux-editor:
    runs-on: "ubuntu-20.04"
    name: Editor

    steps:
      - name: Set up Python 3.x
        uses: actions/setup-python@v2
        with:
          # Semantic version range syntax or exact version of a Python version
          python-version: '3.x'
          # Optional - x64 or x86 architecture, defaults to x64
          architecture: 'x64'
      - name: install scons
        run: |
          python -c "import sys; print(sys.version)"
          python -m pip install scons
          python --version
          scons --version
      # Clone Godot
      - name: clone godot
        uses: actions/checkout@v2
        with:
          repository: godotengine/godot
          ref: ${{env.GODOT_BASE_BRANCH}}
          path: godot
      - name: has godot?
        run: ls
      - name: get cross compile shell
        uses: actions/checkout@v2
        with:
          repository: hiulit/cross-compile-godot-raspberry-pi
          path: shell
      - run: ls
      #Ê£ÄÂá∫Ê≠§‰ªìÂ∫ì
      - name: get sdk.tar.bz2
        uses: actions/checkout@v2
        with:
          repository: 2439905184/godot-arm
          path: sdk 
      - name: show_repo
        run: ls
      #Ëß£Âéãgodot‰∫§ÂèâÁºñËØëÂåÖ Âπ∂Êü•ÁúãËß£ÂéãÁªìÊûú
      - name: extrack build sdk and show files
        run: |
          cd sdk
          tar -jxf arm-godot-linux-gnueabihf_sdk-buildroot.tar.bz2
          cd ..
          ls 
          cd shell
          echo start compile
          sudo chmod +x cross-compile-godot-raspberry-pi.sh
          sudo chmod +x transfer-files-raspberry-pi.sh
          ./cross-compile-godot-raspberry-pi.sh --godot-versions "3.3-stable" --rpi-versions "4" --binaries "editor" --scons-jobs "4" --source-dir ../godot --toolchain-dir ../sdk/arm-godot-linux-gnueabihf_sdk-buildroot
          ls 
      # - name: copy
      #   uses: canastro/copy-file-action@master
      #   with:
      #     source: "arm-godot-linux-gnueabihf_sdk-buildroot"
      #     target: "sdk"
      #   run:
      #     ls
     # - uses: fiam/arm-none-eabi-gcc@v1
     #   with:
     #     release: '9-2019-q4' # The arm-none-eabi-gcc release to use.
         
